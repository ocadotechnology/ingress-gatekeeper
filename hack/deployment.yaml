---
apiVersion: v1
kind: Namespace
metadata:
  name: test-ingress
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: listcheckers.config.istio.io
spec:
  group: config.istio.io
  names:
    categories:
    - istio-io
    - policy-istio-io
    kind: listchecker
    listKind: listcheckerList
    plural: listcheckers
    singular: listchecker
  scope: Namespaced
  version: v1alpha2
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gatekeeper
  namespace: test-ingress
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: gatekeeper
  namespace: test-ingress
rules:
- apiGroups:
  - config.istio.io
  resources:
  - listcheckers
  verbs:
  - get
  - list
  - watch
  - patch
  - create
  - update
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: gatekeeper
  namespace: test-ingress
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gatekeeper
subjects:
- kind: ServiceAccount
  name: gatekeeper
  namespace: test-ingress
---
apiVersion: config.istio.io/v1alpha2
kind: listchecker
metadata:
  name: whitelist-1
  namespace: test-ingress
spec:
  blacklist: false
  entryType: IP_ADDRESSES
  overrides:
  - 157.25.96.24/29
  - 185.53.133.80/29
---
apiVersion: config.istio.io/v1alpha2
kind: listchecker
metadata:
  name: whitelist-2
  namespace: test-ingress
spec:
  blacklist: false
  entryType: IP_ADDRESSES
  overrides:
  - 157.25.96.25/29
  - 185.53.133.81/29
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: gatekeeper
  namespace: test-ingress
  labels:
    app: test-ingress
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: test-ingress
    spec:
      volumes:
      - name: auth-json
        secret:
          secretName: test-ingress
      containers:
      - name: gatekeeper
        image: ocadotechnology/ingress-gatekeeper:2.0.0
        imagePullPolicy: Always
        command:
        - ./gatekeeper.bash
        env:
        - name: GCP_PROJECT_IDS
          value: kubernetes-development
        - name: SOURCE_LISTCHECKER_NAMES
          value: "whitelist-1 whitelist-2"
        - name: DEST_LISTCHECKER_NAME
          value: "whitelist-final"
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 20m
            memory: 500Mi
        volumeMounts:
        - name: auth-json
          mountPath: /creds
      serviceAccountName: gatekeeper
